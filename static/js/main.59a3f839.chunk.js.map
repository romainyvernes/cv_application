{"version":3,"sources":["components/Header.js","components/Contact.js","components/List.js","components/Summary.js","components/Experience.js","components/Preview.js","components/Input.js","components/TextArea.js","components/Form.js","components/Editable.js","components/App.js","index.js"],"names":["Header","props","className","name","position","Contact","email","phone","linkedIn","List","items","category","editMode","map","item","content","value","id","onClick","onDelete","icon","faTrashAlt","Summary","summary","Experience","startDate","endDate","degree","major","institution","company","location","responsibilities","length","responsibility","section","onEdit","faEdit","Preview","general","skill","job","school","skills","jobs","schools","description","Input","attributes","onChange","type","split","placeholder","required","TextArea","undefined","Form","btnDisplay","onSubmit","autoComplete","sectionName","data-index","index","label","htmlFor","Editable","formDisplay","headerInput","contactInput","skillInput","summaryInput","workInput","schoolInput","App","handleChange","e","target","keys","categoryObj","state","setState","preventDefault","dataset","objKey","arrKey","currentObj","push","uniqid","objToReset","Object","key","concat","splice","toggleFormDisplay","newObj","toggleEditMode","mode","edit","editExperience","currentTarget","newArr","reduce","arr","experienceObj","responsibilityStr","str","sourceArr","deleteItem","obj","format","Date","bind","this","experienceInput","Component","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.59a3f839.chunk.js","sourcesContent":["import React from 'react';\n\nconst Header = (props) => {\n  return (\n    <div>\n      <h2 className='side-name'>{props.name}</h2>\n      <p className='side-position'>{props.position}</p>\n    </div>\n  );\n};\n\nexport default Header;","import React from 'react';\n\nconst Contact = (props) => {\n  const { email, phone, linkedIn } = props;\n  \n  return (\n    <div className='contact-info'>\n      <p>{email}</p>\n      <p>{phone}</p>\n      <p>{linkedIn}</p>\n    </div>\n  );\n};\n\nexport default Contact;","import React from 'react';\nimport '../styles/List.css';\nimport { FontAwesomeIcon } from '@fortawesome/react-fontawesome';\nimport { faTrashAlt } from \"@fortawesome/free-solid-svg-icons\";\n\nconst List = (props) => {\n  const { items, category } = props;\n  \n  return (\n    <ul \n      className={`${category}-list ${\n        props.editMode ? 'skill-edit' : ''\n      }`}\n    >\n      {items.map((item) => (\n        <li key={item.id}>\n          <span>{item.name || item.content}</span>\n          {props.editMode \n            ? <button \n                name={category} \n                value={item.id} \n                onClick={props.onDelete}\n              >\n                <FontAwesomeIcon icon={faTrashAlt} />\n              </button> \n            : ''\n          }\n        </li>\n      ))}\n    </ul>\n  );\n};\n\nexport default List;","import React from 'react';\n\nconst Summary = (props) => {  \n  return (\n    <div className='summary'>\n      <p>{props.summary}</p>\n    </div>\n  );\n};\n\nexport default Summary;","// Use for both work and education\nimport React from 'react';\nimport '../styles/Experience.css';\nimport List from './List';\nimport { FontAwesomeIcon } from '@fortawesome/react-fontawesome';\nimport { faEdit, faTrashAlt } from \"@fortawesome/free-solid-svg-icons\";\n\nconst Experience = (props) => {\n  const { items } = props;\n\n  return (\n    <div \n      className={`experience-wrapper ${\n        props.editMode ? 'experience-edit' : ''\n      }`}\n    >\n      {items.map((item) => (\n        <div className='experience' key={item.id}>\n          <div className='dates'>\n            <p>{item.startDate} - {item.endDate || 'Present'}</p>\n          </div>\n          <div>\n            <h4 className='experience-label'>\n              {item.position || item.degree}\n              {item.degree ? `, ${item.major}` : ''}\n            </h4>\n            <p className='experience-institution'>\n              {item.institution || item.company}\n            </p>\n            <p className='experience-location'>{item.location}</p>\n            {item.responsibilities.length === 0\n              ? <List \n                  items={[item.responsibility]} \n                  category={'experience'} />\n              : <List items={item.responsibilities} category={'experience'}/>\n            }\n          </div>\n          {props.editMode\n            ? <div className='experience-btn-wrapper'>\n                <button \n                  name={props.section} \n                  value={item.id} \n                  onClick={props.onEdit}\n                >\n                  <FontAwesomeIcon icon={faEdit} />\n                </button>\n                <button \n                  name={props.section} \n                  value={item.id} \n                  onClick={props.onDelete}\n                >\n                  <FontAwesomeIcon icon={faTrashAlt} />\n                </button>\n              </div>\n            : ''\n          }\n        </div>\n      ))}\n    </div>\n  );\n};\n\nexport default Experience;","import React from 'react';\nimport Header from './Header';\nimport Contact from './Contact';\nimport List from './List';\nimport Summary from './Summary';\nimport Experience from './Experience';\nimport '../styles/Preview.css';\n\nconst Preview = (props) => {\n  const { \n    general, \n    skill, \n    job, \n    school,\n    skills,\n    jobs,\n    schools,\n  } = props;\n  \n  return (\n    <div className=\"resume-page\">\n      <section className='side-bar'>\n        <Header name={general.name} position={general.position}/>\n        <div className='contact-section preview-contact'>\n          <h3 className='side-heading'>Contact</h3>\n          <hr />\n          <Contact \n            email={general.email} \n            phone={general.phone} \n            linkedIn={general.linkedIn} />\n        </div>\n        <div className='skills-section'>\n          <h3 className='side-heading'>Skills</h3>\n          <hr />\n          {skills.length === 0\n            ? <List items={[skill]} category={'skill'}/>\n            : <List items={skills} category={'skill'}/>\n          }\n        </div>\n      </section>\n      <main>\n        <section className='summary-section'>\n          <h3 className='summary-heading'>Summary</h3>\n          <hr />\n          <Summary summary={general.description}/>\n        </section>\n        <section className='work-section'>\n          <h3 className='experience-heading'>Professional Experience</h3>\n          <hr />\n          {jobs.length === 0 \n            ? <Experience items={[job]}/>\n            : <Experience items={jobs}/>\n          }\n        </section>\n        <section className='education-section'>\n          <h3 className='experience-heading'>Education</h3>\n          <hr />\n          {schools.length === 0 \n            ? <Experience items={[school]}/>\n            : <Experience items={schools}/>\n          }\n        </section>\n      </main>\n    </div>\n  );\n};\n\nexport default Preview;","import React from 'react';\nimport '../styles/Input.css';\n\nconst Input = (props) => {\n  const { attributes, onChange, content } = props;\n  \n  return (\n    <input \n      className='input-field'\n      name={attributes.name}\n      type={attributes.type}\n      value={content[attributes.name.split('-')[1]]}\n      placeholder={attributes.placeholder}\n      onChange={onChange}\n      required={attributes.name.split('-')[1] === 'endDate' ? false : true}\n    />\n  );\n};\n\nexport default Input;","import React from 'react';\nimport '../styles/TextArea.css';\n\nconst TextArea = (props) => {\n  const { attributes, onChange, content } = props;\n  \n  return (\n    <textarea \n      name={attributes.name}\n      placeholder={attributes.placeholder}\n      value={content[attributes.name.split('-')[1]].content !== undefined\n        ? content[attributes.name.split('-')[1]].content\n        : content[attributes.name.split('-')[1]]\n      }\n      onChange={onChange}\n      required\n    ></textarea>\n  );\n};\n\nexport default TextArea;","// Use for all editable sections\nimport React from 'react';\nimport Input from './Input';\nimport TextArea from './TextArea';\nimport '../styles/Form.css';\n\nconst Form = (props) => {\n  const { items, btnDisplay, onChange, content } = props;\n  \n  return (\n    <form \n      onSubmit={props.onSubmit || undefined} \n      autoComplete='off'\n      name={props.sectionName || undefined}\n      data-index={content.index !== undefined ? content.index : undefined}\n    >\n      {items.map((item, index) => (\n        <div \n          className={\n            `input-wrapper ${item.type === 'date' ? 'date-input' : ''}`\n          }\n          key={index}\n        >\n          {item.label && <label htmlFor={item.name}>{item.label}</label>}\n          {item.type === 'text-area'\n            ? <TextArea attributes={item} content={content} onChange={onChange} />\n            : <Input attributes={item} content={content} onChange={onChange} />\n          }\n        </div>\n      ))}\n      {btnDisplay &&\n        <div className='form-btn-wrapper'>\n          <button \n            type='reset' \n            name={props.sectionName}\n            onClick={props.onClick}\n          >\n            Cancel\n          </button>\n          <button type='submit'>Add</button>\n        </div>\n      }\n    </form>\n  );\n};\n\nexport default Form;","import React from 'react';\nimport Form from './Form';\nimport Experience from './Experience';\nimport List from './List';\nimport '../styles/Editable.css';\n\nconst Editable = (props) => {\n  const { \n    formDisplay,\n    headerInput,\n    contactInput,\n    skillInput,\n    summaryInput,\n    workInput,\n    schoolInput,\n    general,\n    skill,\n    job,\n    school,\n    skills,\n    jobs,\n    schools,\n    editMode,\n    onSubmit,\n    onChange,\n    onClick,\n    onEdit,\n    onDelete,\n  } = props;\n  \n  return (\n    <div className=\"resume-page\">\n      <section className='side-bar'>\n        <Form items={headerInput} content={general} btnDisplay={false} onChange={onChange} />\n        <div className='contact-section'>\n          <h3 className='side-heading'>Contact</h3>\n          <hr />\n          <Form items={contactInput} content={general} btnDisplay={false} onChange={onChange} />\n        </div>\n        <div className='skills-section'>\n          <h3 className='side-heading'>Skills</h3>\n          <hr />\n          {skills.length > 0 \n            ? <List \n                items={skills}\n                category={'skill'}\n                editMode={editMode}\n                onDelete={onDelete} />\n            : ''\n          }\n          {formDisplay.skill\n            ? <Form \n                items={skillInput} \n                btnDisplay={true}\n                content={skill}\n                onSubmit={onSubmit}\n                onChange={onChange}\n                onClick={onClick}\n                sectionName={'skill'} />\n            : <button type='submit' name='skill' onClick={onClick}>\n                Add skills\n              </button>\n          }\n        </div>\n      </section>\n      <main>\n        <section className='summary-section'>\n          <h3 className='summary-heading'>Summary</h3>\n          <hr />\n          <Form \n            items={summaryInput} \n            content={general} \n            btnDisplay={false} \n            onChange={onChange} />\n        </section>\n        <section className='work-section'>\n          <h3 className='experience-heading'>Professional Experience</h3>\n          <hr />\n          {jobs.length > 0 \n            ? <Experience \n                items={jobs} \n                editMode={editMode} \n                section={'job'}\n                onEdit={onEdit}\n                onDelete={onDelete} />\n            : ''\n          }\n          {formDisplay.job\n            ? <Form \n                items={workInput} \n                btnDisplay={true}\n                content={job}\n                onSubmit={onSubmit}\n                onChange={onChange}\n                onClick={onClick}\n                sectionName={'job'} />\n            : <button type='submit' name='job' onClick={onClick}>\n                Add job\n              </button>\n          }\n        </section>\n        <section className='education-section'>\n          <h3 className='experience-heading'>Education</h3>\n          <hr />\n          {schools.length > 0 \n            ? <Experience \n                items={schools} \n                editMode={editMode} \n                section={'school'}\n                onEdit={onEdit}\n                onDelete={onDelete} />\n            : ''\n          }\n          {formDisplay.school\n            ? <Form \n                items={schoolInput} \n                btnDisplay={true} \n                content={school}\n                onSubmit={onSubmit}\n                onChange={onChange}\n                onClick={onClick}\n                sectionName={'school'} />\n            : <button type='submit' name='school' onClick={onClick}>\n                Add school\n              </button>\n          }\n        </section>\n      </main>\n    </div>\n  );\n};\n\nexport default Editable;","import React, { Component } from 'react';\nimport uniqid from 'uniqid';\nimport '../styles/App.css';\nimport Preview from './Preview';\nimport Editable from './Editable';\nimport { format } from 'date-fns';\n\nclass App extends Component {\n  constructor() {\n    super();\n\n    this.state = {\n      mode: {\n        edit: true,\n      },\n      formDisplay: {\n        skill: false,\n        job: false,\n        school: false,\n      },\n      general: {\n        name: 'YOUR FULL NAME',\n        position: 'Your Current Position',\n        phone: '(555) 555-5555',\n        email: 'myemail@gmail.com',\n        linkedIn: 'linkedin.com/in/myname',\n        description: 'Summary of your professional background and objectives',\n      },\n      job: {\n        index: 0,\n        id: uniqid(),\n        startDate: format(new Date(2021, 0, 1), 'yyyy-MM-dd'),\n        endDate: '',\n        position: 'Position',\n        company: 'Company name',\n        location: 'City, State/Country',\n        responsibility: {\n          content: 'Description of key accomplishments and responsibilities',\n          id: uniqid(),\n        },\n        responsibilities: [],\n      },\n      jobs: [],\n      school: {\n        index: 0,\n        id: uniqid(),\n        startDate: format(new Date(2021, 0, 1), 'yyyy-MM-dd'),\n        endDate: '',\n        institution: 'Name of Educational Institution',\n        degree: 'Diploma or degree earned',\n        major: 'Your Major',\n        location: 'City, State/Country',\n        responsibility: {\n          content: 'Description of key accomplishments',\n          id: uniqid(),\n        },\n        responsibilities: [],\n      },\n      schools: [],\n      skill: {\n        index: 0,\n        name: 'Name of skill',\n        id: uniqid(),\n      },\n      skills: [],\n    };\n\n    this.handleChange = this.handleChange.bind(this);\n    this.onSubmit = this.onSubmit.bind(this);\n    this.toggleFormDisplay = this.toggleFormDisplay.bind(this);\n    this.toggleEditMode = this.toggleEditMode.bind(this);\n    this.editExperience  = this.editExperience.bind(this);\n    this.deleteItem = this.deleteItem.bind(this);\n  }\n\n  handleChange = (e) => {\n    const { name, value } = e.target;\n    const keys = name.split('-');\n    const categoryObj = {...this.state[keys[0]]};\n\n    if (keys[1] === 'responsibility') {\n      categoryObj.responsibility.content = value;\n    } else {\n      categoryObj[keys[1]] = value;\n    }\n\n    this.setState({\n      [keys[0]]: categoryObj,\n    });\n  };\n\n  onSubmit = (e) => {\n    e.preventDefault();\n\n    const { name, dataset } = e.target;\n    \n    const objKey = name;\n    const arrKey =  objKey + 's';\n\n    // retrieve current object in state\n    const currentObj = {...this.state[objKey]};\n    \n    // break down responsibilities into separate objects and push them into\n    // responsibilities array\n    if (currentObj.responsibility) {\n      currentObj.responsibility.content\n      .split(';')\n      .map((responsibility) => (\n        currentObj.responsibilities.push({\n          content: responsibility,\n          id: uniqid(),\n        })\n      ));\n    }\n    \n    // retrieve copy of current state and reset all its keys\n    const objToReset = {...this.state[objKey]};\n\n    for (const key of Object.keys(objToReset)) {\n      if (key === 'id') {\n        objToReset[key] = uniqid();\n      } else if (key === 'responsibility') {\n        objToReset[key].id = uniqid();\n        objToReset[key].content = '';\n      } else if (key === 'responsibilities') {\n        objToReset[key] = [];\n      } else if (key === 'index') {\n        objToReset[key] = objToReset[key] + 1;\n      } else {\n        objToReset[key] = '';\n      }\n    }\n    \n    // reset index property of current object if index is out of range\n    if (this.state[arrKey].length < dataset.index + 1) {\n      currentObj.index = this.state[arrKey].length;\n    }\n    \n    this.setState({\n      [arrKey]: this.state[arrKey].length < dataset.index + 1\n        ? this.state[arrKey].concat(currentObj)\n        : [...this.state[arrKey]].splice(dataset.index, 0, currentObj),\n      [objKey]: objToReset,\n    });\n  };\n\n  toggleFormDisplay = (e) => {\n    const { name } = e.target;\n    const newObj = {...this.state.formDisplay};\n    \n    for (const key of Object.keys(newObj)) {\n      if (key === name) {\n        newObj[key] ? newObj[key] = false : newObj[key] = true;\n      }\n    }\n\n    this.setState({\n      formDisplay: newObj,\n    });\n  };\n\n  toggleEditMode = () => {\n    this.setState({\n      mode: {\n        edit: this.state.mode.edit ? false : true,\n      },\n    });\n  };\n\n  editExperience = (e) => {\n    // 1. remove experience from jobs/schools array\n    // 2. load it into current state\n    \n    // retrieve the name of the section being edited, and the value of its id\n    const { name, value } = e.currentTarget;\n    \n    // retrieve the current array of jobs or schools or skills\n    const currentArr = [...this.state[name + 's']];\n    \n    // variable that saves the matching object in currentArr\n    let newObj;\n    \n    // create new array that excludes the matching object\n    const newArr = currentArr.reduce((arr, experienceObj) => {\n      if (experienceObj.id === value) {\n        newObj = experienceObj;\n        return arr;\n      }\n      arr.push(experienceObj);\n      return arr;\n    }, []);\n\n    if (newObj.responsibilities.length > 0) {\n      // load responsibilities back as a single string separated by semi-colons\n      const responsibilityStr = newObj.responsibilities\n        .reduce((str, responsibility, index, sourceArr) => {\n          if (index < sourceArr.length - 1) {\n            str = str + responsibility.content + ';';\n            return str;\n          }\n          str = str + responsibility.content;\n          return str\n        }, '');\n\n      newObj.responsibility.content = responsibilityStr;\n      newObj.responsibilities = [];\n    }\n\n    this.setState({\n      [name + 's']: newArr,\n      [name]: newObj,\n    });\n  };\n\n  deleteItem = (e) => {\n    const { name, value } = e.currentTarget;\n    \n    // create a new array without matching object\n    const newArr = this.state[name + 's'].reduce((arr, obj) => {\n      if (obj.id === value) {\n        return arr;\n      }\n      arr.push(obj);\n      return arr;\n    }, []);\n\n    this.setState({\n      [name + 's']: newArr,\n    });\n  };\n\n  render() {\n    const { \n      general, \n      skill, \n      job, \n      school, \n      mode,\n      skills,\n      jobs,\n      schools,\n      formDisplay,\n    } = this.state;\n\n    const headerInput = [\n      {\n        name: 'general-name',\n        type: 'text',\n        placeholder: 'Enter your full name',\n      },\n      {\n        name: 'general-position',\n        type: 'text',\n        placeholder: 'Enter your current position',\n      }\n    ];\n\n    const contactInput = [\n      {\n        name: 'general-email',\n        type: 'email',\n        placeholder: 'Enter your email address',\n      },\n      {\n        name: 'general-phone',\n        type: 'tel',\n        placeholder: 'Enter your phone number',\n      },\n      {\n        name: 'general-linkedIn',\n        type: 'text',\n        placeholder: 'Enter link to your LinkedIn account',\n      },\n    ];\n\n    const skillInput = [\n      {\n        name: 'skill-name',\n        type: 'text',\n        placeholder: 'Add your top 5 skills',\n      },\n    ];\n\n    const summaryInput = [\n      {\n        name: 'general-description',\n        type: 'text-area',\n        placeholder: 'Write a short summary of your background and professional goals',\n      },\n    ];\n\n    const experienceInput = [\n      {\n        name: 'location',\n        label: 'Location',\n        type: 'text',\n        placeholder: 'City, State/Country',\n      },\n      {\n        name: 'startDate',\n        label: 'From',\n        type: 'date',\n      },\n      {\n        name: 'endDate',\n        label: 'To',\n        type: 'date',\n      },\n      {\n        name: 'responsibility',\n        label: 'Responsibilities',\n        type: 'text-area',\n        placeholder: \n          'Describe some of your key responsibilities and/or accomplishments. Separate each one with a semi-colon.',\n      },\n    ];\n\n    const workInput = [\n      {\n        name: 'job-company',\n        label: 'Company',\n        type: 'text',\n        placeholder: 'Company name',\n      },\n      {\n        name: 'job-position',\n        label: 'Position',\n        type: 'text',\n        placeholder: 'Position',\n      },\n    ];\n\n    const schoolInput = [\n      {\n        name: 'school-institution',\n        label: 'Educational institution',\n        type: 'text',\n        placeholder: 'Name of school or university',\n      },\n      {\n        name: 'school-degree',\n        label: 'Diploma or degree earned',\n        type: 'text',\n        placeholder: 'Name of diploma or degree',\n      },\n      {\n        name: 'school-major',\n        label: 'Major (if any)',\n        type: 'text',\n        placeholder: 'Name of major discipline',\n      },\n    ];\n\n    return (\n      <div className='content-wrapper'>\n        <label   \n          className='toggle-preview'\n        >\n          <input \n            type=\"checkbox\" \n            className='toggle-input' \n            onClick={this.toggleEditMode}\n          />\n          <span className='toggle-slider'></span>\n        </label>\n        {mode.edit\n          ? <Editable\n              formDisplay={formDisplay}\n              headerInput={headerInput}\n              contactInput={contactInput}\n              skillInput={skillInput}\n              summaryInput={summaryInput}\n              workInput={workInput.concat(experienceInput.map((obj) => {\n                const newObj = {...obj};\n                newObj.name = 'job-' + obj.name;\n                return newObj;\n              }))}\n              schoolInput={schoolInput.concat(experienceInput.map((obj) => {\n                const newObj = {...obj};\n                newObj.name = 'school-' + obj.name;\n                return newObj;\n              }))}\n              general={general}\n              skill={skill} \n              job={job}\n              school={school}\n              skills={skills}\n              jobs={jobs}\n              schools={schools}\n              editMode={mode.edit}\n              onSubmit={this.onSubmit}\n              onChange={this.handleChange}\n              onClick={this.toggleFormDisplay}\n              onEdit={this.editExperience}\n              onDelete={this.deleteItem}\n            />\n          : <Preview \n              general={general}\n              skill={skill} \n              job={job}\n              school={school}\n              skills={skills}\n              jobs={jobs}\n              schools={schools}\n            />\n        }\n      </div>\n    );\n  }\n};\n\nexport default App;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './styles/index.css';\nimport App from './components/App';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n"],"sourceRoot":""}